openapi: 3.0.0
info:
  title: Tucity API
  version: 1.0.0
  description: API documentation for User, Match, and Authentication-related operations.

paths:
  /user/getall:
    get:
      summary: Retrieve all users
      description: Fetch a list of all registered users.
      tags:
        - User
      security:
        - bearerAuth: []
      responses:
        200:
          description: A list of users.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TucityUser'
        403:
          description: Unauthorized access.
      x-preauthorize: hasRole('ROLE_BASIC_USER')

  /user/postadmin:
    post:
      summary: Create an admin user
      description: Creates a new admin user with the given details.
      tags:
        - User
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUserDto'
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
            description: Bearer token for authentication.
      responses:
        200:
          description: The created admin user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TucityUser'
        403:
          description: Unauthorized access.
      x-preauthorize: hasRole('ROLE_OWNER')

  /match/match:
    post:
      summary: Create a match
      description: Posts a new match using the provided match details.
      tags:
        - Match
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMatchDto'
      responses:
        200:
          description: The created match.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'

  /match/getbyid/{id}:
    get:
      summary: Get match by ID
      description: Retrieves details of a match by its unique identifier.
      tags:
        - Match
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            description: The ID of the match.
      responses:
        200:
          description: The match details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'
        404:
          description: Match not found.

  /match/getbyuser/{userId}:
    get:
      summary: Get matches by user
      description: Fetches all matches associated with a specific user ID.
      tags:
        - Match
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: integer
            description: The user ID to filter matches.
      responses:
        200:
          description: List of matches.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Match'

  /auth/signup:
    post:
      summary: Register a new user
      description: Registers a new user with the given details.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUserDto'
      responses:
        200:
          description: The registered user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TucityUser'

  /auth/login:
    post:
      summary: Login a user
      description: Authenticates a user and returns a JWT token upon successful login.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUserDto'
      responses:
        200:
          description: Login successful. Returns the token and expiration time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        401:
          description: Invalid login credentials.

components:
  schemas:
    TucityUser:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string

    RegisterUserDto:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string

    LoginUserDto:
      type: object
      properties:
        username:
          type: string
        password:
          type: string

    LoginResponse:
      type: object
      properties:
        token:
          type: string
        expiresIn:
          type: integer
          description: Expiration time of the token in seconds.

    CreateMatchDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string

    Match:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
